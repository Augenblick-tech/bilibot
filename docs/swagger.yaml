basePath: /v2
definitions:
  api.AuthorInfo:
    properties:
      bot_id:
        type: string
      mid:
        type: string
    type: object
  api.BiliQrCodeAuth:
    properties:
      qrcode_key:
        type: string
      ts:
        type: integer
      url:
        type: string
    type: object
  api.BotInfo:
    properties:
      bot_id:
        type: integer
      face:
        type: string
      is_login:
        type: boolean
      name:
        type: string
    type: object
  api.CommentInfo:
    properties:
      bot_id:
        type: string
      message:
        type: string
      oid:
        type: string
      type:
        type: integer
    required:
    - bot_id
    - message
    - oid
    - type
    type: object
  api.RegisteredToken:
    properties:
      expire_at:
        type: integer
      refresh_expire_at:
        type: integer
      refresh_token:
        type: string
      token:
        type: string
    type: object
  api.ReplyInfo:
    properties:
      emote: {}
      success_toast:
        type: string
    type: object
  api.UserInfo:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  bilibot.Author:
    properties:
      face:
        description: 作者头像
        type: string
      mid:
        description: 作者ID
        type: integer
      name:
        description: 作者名称
        type: string
      pub_ts:
        description: 作者发布时间
        type: integer
    type: object
  bilibot.Content:
    properties:
      desc:
        properties:
          text:
            description: 动态内容
            type: string
        type: object
    type: object
  bilibot.Dynamic:
    properties:
      id_str:
        description: 动态ID
        type: string
      modules:
        properties:
          module_author:
            $ref: '#/definitions/bilibot.Author'
            description: 动态作者
          module_dynamic:
            $ref: '#/definitions/bilibot.Content'
            description: 动态内容
        type: object
    type: object
  model.Author:
    properties:
      author_id:
        type: string
      bot_id:
        type: string
      face:
        type: string
      name:
        type: string
    type: object
  model.Bot:
    properties:
      bot_id:
        type: string
      cookie:
        type: string
      face:
        type: string
      is_login:
        type: boolean
      name:
        type: string
      user_id:
        type: integer
    type: object
  model.Dynamic:
    properties:
      author_id:
        type: integer
      content:
        type: string
      dynamic_id:
        type: string
      ts:
        type: integer
    type: object
  model.Email:
    properties:
      from:
        type: string
      host:
        type: string
      pass:
        type: string
      port:
        type: integer
      to:
        type: string
      user_id:
        type: integer
    type: object
info:
  contact:
    email: lonzzi@qq.com
    name: lonzzi
    url: https://ronki.moe
  description: a bilibot server
  termsOfService: http://swagger.io/terms/
  title: bilibot
  version: "2.0"
paths:
  /bili/bot/check:
    get:
      consumes:
      - application/json
      parameters:
      - description: cookie当中的SESSDATA
        in: query
        name: sessdata
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.BotInfo'
      security:
      - ApiKeyAuth: []
      summary: 查询Bot登陆状态
      tags:
      - bili
  /bili/dynamic/getDynamic:
    get:
      parameters:
      - description: up主id
        in: query
        name: mid
        required: true
        type: string
      - description: 动态偏移量
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/bilibot.Dynamic'
            type: array
      security:
      - ApiKeyAuth: []
      summary: 获取动态列表(访问b站api)
      tags:
      - bili
  /bili/qrcode/getLoginInfo:
    get:
      consumes:
      - application/json
      parameters:
      - description: QrcodeKey
        in: query
        name: qrcode_key
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 获取二维码状态
      tags:
      - bili
  /bili/qrcode/getLoginUrl:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.BiliQrCodeAuth'
      security:
      - ApiKeyAuth: []
      summary: 获取二维码登录链接
      tags:
      - bili
  /bili/reply/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: 回复评论详细信息
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/api.CommentInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ReplyInfo'
      security:
      - ApiKeyAuth: []
      summary: 根据type与oid进行回复
      tags:
      - bili
  /web/author/add:
    post:
      consumes:
      - application/json
      description: 需先添加up主之后才能监听动态
      parameters:
      - description: up主id和BotID
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/api.AuthorInfo'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 添加up主
      tags:
      - web
  /web/author/list:
    get:
      parameters:
      - description: BotID
        in: query
        name: bot_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Author'
            type: array
      security:
      - ApiKeyAuth: []
      summary: 获取 up 主列表
      tags:
      - web
  /web/bot/list:
    get:
      description: 根据 Token 获取 Bot 列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Bot'
            type: array
      security:
      - ApiKeyAuth: []
      summary: 获取 Bot 列表
      tags:
      - web
  /web/dynamic/latest:
    get:
      parameters:
      - description: BotID
        in: query
        name: bot_id
        required: true
        type: string
      - description: up主ID
        in: query
        name: mid
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 获取up主最新动态
      tags:
      - web
  /web/dynamic/list:
    get:
      parameters:
      - description: BotID
        in: query
        name: bot_id
        required: true
        type: string
      - description: up主ID
        in: query
        name: mid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Dynamic'
            type: array
      security:
      - ApiKeyAuth: []
      summary: 获取 up 主的动态列表
      tags:
      - web
  /web/dynamic/listen:
    get:
      description: 根据设定的时间间隔监听up主动态
      parameters:
      - description: BotID
        in: query
        name: bot_id
        required: true
        type: string
      - description: up主ID
        in: query
        name: mid
        required: true
        type: string
      - description: 监听时间间隔(s)
        in: query
        name: interval
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 监听up主动态
      tags:
      - web
  /web/dynamic/status:
    get:
      parameters:
      - description: BotID
        in: query
        name: bot_id
        required: true
        type: string
      - description: up主ID
        in: query
        name: mid
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 获取传入的uid的状态
      tags:
      - web
  /web/dynamic/stop:
    get:
      parameters:
      - description: BotID
        in: query
        name: bot_id
        required: true
        type: string
      - description: up主ID
        in: query
        name: mid
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 停止传入的uid的任务
      tags:
      - web
  /web/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户信息
        in: body
        name: 用户信息
        required: true
        schema:
          $ref: '#/definitions/api.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RegisteredToken'
      summary: 站点用户登录
      tags:
      - web
  /web/refreshToken:
    get:
      parameters:
      - description: Bearer 刷新令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RegisteredToken'
      summary: 刷新 AccessToken
      tags:
      - web
  /web/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户信息
        in: body
        name: information
        required: true
        schema:
          $ref: '#/definitions/api.UserInfo'
      produces:
      - application/json
      responses: {}
      summary: 站点用户注册
      tags:
      - web
  /web/setting/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: 邮件相关设置
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/model.Email'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新设置
      tags:
      - web
  /web/task/status:
    get:
      consumes:
      - application/json
      parameters:
      - description: 任务名称
        in: query
        name: task
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 获取任务状态
      tags:
      - web
  /web/task/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: 任务名称
        in: query
        name: task
        required: true
        type: string
      - description: 任务状态
        in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新任务状态
      tags:
      - web
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
